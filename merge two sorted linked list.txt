//merge two sorted linked list

#include <bits/stdc++.h>

/************************************************************

    Following is the linked list node structure.
    
    template <typename T>
    class Node {
        public:
        T data;
        Node* next;

        Node(T data) {
            next = NULL;
            this->data = data;
        }

        ~Node() {
            if (next != NULL) {
                delete next;
            }
        }
    };

************************************************************/

Node<int>* sortTwoLists(Node<int>* first, Node<int>* second)
{
    // Write your code here.
    // if(first==NULL) return second;
    // if(second==NULL) return first;
    // Node<int>*dummy=new Node<int>(-1);
    // Node<int>*temp=dummy;
    // while(first != NULL && second != NULL){
    //     if(first->data <second->data){
    //         temp->next=first;
    //         temp=first;
    //         first=first->next;
    //     }else{
    //         temp->next=second;
    //         temp=second;
    //         second=second->next;
    //     }

        
    // }
    // while(first != NULL){
    //     temp->next=first;
    //     temp=first;
    //     first=first->next;
    // }
    // while(second != NULL){
    //     temp->next=second;
    //     temp=second;
    //     second=second->next;
    // }
    // temp=temp->next;
    // return dummy;
//solve this recursion
    Node<int>*ans=NULL;
    if(first==NULL) return second;
    if(second==NULL) return first;
     if(first->data <second->data){
         ans=first;
         ans->next=sortTwoLists(first->next,second);

     }else{
         ans=second;
         ans->next=sortTwoLists(first,second->next);
     }
     return ans;
    
}
