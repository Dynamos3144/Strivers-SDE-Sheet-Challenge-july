sort 0,1,,2

Valid paranthesis

bool isValidParenthesis(string expression)
{
    // Write your code here.
    //create a stack
    // stack<int>st;
    // int n=expression.size();
    // for(int i=0;i<n;i++){
    //     char a=expression[i];
    //     if(a=='[' || a=='{' || a=='('){
    //         st.push(a);
    //     }
    //     else{
    //         if(st.empty()){
    //             return false;
    //         }else{
    //             char temp=st.top();
    //             if (temp == '(' && a == ')' || temp == '{' && a == '}'|| temp=='['&& a==']'){
    //                 st.pop();
    //             }
    //             else{
    //                 return false;
    //             }

    //         }
    //     }
    // }
    // return true;

    //modify

stack<char>st;
    for (char c : expression) { 
        if (c == '(' || c == '{' || c == '[') { 
            st.push(c); 
            }
            else { 
            if (st.empty() || 
                (c == ')' && st.top() != '(') || 
                (c == '}' && st.top() != '{') ||
                (c == ']' && st.top() != '[')) {
                return false; 
            }
            st.pop(); 
        }
    }
    return st.empty(); 
}


 